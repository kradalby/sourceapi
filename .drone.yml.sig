eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgdGVzdDoKICAgIGltYWdlOiBweXRob246My41LjIKICAgIGNvbW1hbmRzOgogICAgICAtIHBpcCBpbnN0YWxsIHRveAogICAgICAtIGNwIGNvbmZpZy5weS5leGFtcGxlIGNvbmZpZy5weQogICAgICAtIHRveAoKICBkb2NrZXI6CiAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXIKICAgIHJlcG86IHJlZ2lzdHJ5LmZhcC5uby9zb3VyY2VhcGkvc291cmNlYXBpCiAgICBpbnNlY3VyZTogdHJ1ZQogICAgdGFnczoKICAgICAgICAtIGxhdGVzdAogICAgd2hlbjoKICAgICAgICBicmFuY2g6IG1hc3RlcgoKICBzc2g6CiAgICBpbWFnZTogYXBwbGVib3kvZHJvbmUtc3NoCiAgICBob3N0OgogICAgIC0gcHJpbWVhcGUudGVycmEuZmFwLm5vCiAgICB1c2VyOiByb290CiAgICBwb3J0OiAyMgogICAgc2NyaXB0OgogICAgICAtIGRvY2tlciBwdWxsIHJlZ2lzdHJ5LmZhcC5uby9zb3VyY2VhcGkvc291cmNlYXBpOmxhdGVzdAogICAgICAtIGRvY2tlci1jb21wb3NlIC1mIC9zcnYvZG9ja2VyL3NvdXJjZWFwaS9kb2NrZXItY29tcG9zZS55bWwgc3RvcAogICAgICAtIGRvY2tlci1jb21wb3NlIC1mIC9zcnYvZG9ja2VyL3NvdXJjZWFwaS9kb2NrZXItY29tcG9zZS55bWwgdXAgLWQKICAgIHdoZW46CiAgICAgICAgc3RhdHVzOiBzdWNjZXNzCiAgICAgICAgYnJhbmNoOiBtYXN0ZXIKCiAgbm90aWZ5OgogICAgaW1hZ2U6IGRyaWxsc3Rlci9kcm9uZS1lbWFpbAogICAgaG9zdDogbWFpbC5udG51LmZhcC5ubwogICAgcG9ydDogMjUKICAgIGZyb206IGRyb25lQGRyb25lLmZhcC5ubwogICAgcmVjaXBpZW50czogWyBrcmFkYWxieUBrcmFkYWxieS5ubyBdCiAgICB3aGVuOgogICAgICBzdGF0dXM6IFsgc3VjY2VzcywgY2hhbmdlZCwgZmFpbHVyZSBdCgo.yhN3XcJmiHQLNZ_mqs834U3XM6GgzSecUylGjwb0b5o